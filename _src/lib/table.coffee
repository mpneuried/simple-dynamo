# # SimpleDynamoTable

# ### extends [NPM:MPBasic](https://cdn.rawgit.com/mpneuried/mpbaisc/master/_docs/index.coffee.html)

#
# ### Exports: *Class*
#
# Main Module
#


class SimpleDynamoTable extends require( "./basic" )
	# ## defaults
	defaults: =>
		@extend super,
			# **SimpleDynamoManager.throughput** *Object* The default throughput configuration if a tabele is generated by simple-dynamo
			throughput:
				# **SimpleDynamoManager.throughput.read** *Number* The AWS-DynamoDB read throughput
				read: 5
				# **SimpleDynamoManager.throughput.write** *Number* The AWS-DynamoDB write throughput
				write: 5
			# **SimpleDynamoManager.overwriteExistingHash** *Boolean* Overwrite existing hashed by default
			overwriteExistingHash: false
	###
	## constructor
	###
	constructor: ( tblcnf, options ) ->
		super( options )
		
		@connected = false
		
		@setGetters( tblcnf )
		return
	
	setGetters: ( tblcnf )=>
		@getter "name", ->
			return tblcnf.key
			
		@getter "tableName", ->
			return tblcnf.combineTableTo or tblcnf.name or null
		
		@getter "hasRange", ->
			return if tblcnf?.rangeKey?.length then true else false

		@getter "hashKey", ->
			return tblcnf?.hashKey or null

		@getter "hashKeyType", =>
			if @isCombinedTable
				return "S"
			else
				return tblcnf?.hashKeyType or "S"

		@getter "rangeKey", ->
			return tblcnf?.rangeKey or null

		@getter "rangeKeyType", =>
			if @hasRange
				return tblcnf?.rangeKeyType or "N"
			else
				return null
			
		@getter "overwriteExistingHash", =>
			if tblcnf?.overwriteExistingHash?
				return tblcnf.overwriteExistingHash
			else if @config.overwriteExistingHash?
				return @config.overwriteExistingHash
			else
				return false
		
		return
		
	connect: =>
		console.log "CONNECT", @tableName
		return
	
	
module.exports = SimpleDynamoTable
